import emoji
import numpy as np
import matplotlib.pyplot as plt
import random

def remove_emojis(text):
    """Remove emojis from the text."""
    return emoji.replace_emoji(text, replace='')

def gaussian_word_count(min_words, max_words, mean=9, stddev=3):
    """Generate a Gaussian distributed word count."""
    while True:
        count = int(np.random.normal(mean, stddev))
        if count >= min_words and count <= max_words:
            return count
        if count < min_words and random.random() < 0.1:  # 10% chance for less than min_words
            return count
        if count > max_words and random.random() < 0.1:  # 10% chance for more than max_words
            return count

def split_lines_by_gaussian_word_count(lines, min_words, max_words):
    """Split lines ensuring Gaussian distribution of word count."""
    split_lines = []
    word_counts = []
    for line in lines:
        words = line.split()
        while len(words) > 0:
            word_count = gaussian_word_count(min_words, max_words)
            split_lines.append(' '.join(words[:word_count]))
            word_counts.append(len(words[:word_count]))
            words = words[word_count:]
    return split_lines, word_counts

def plot_word_count_distribution(word_counts, min_words, max_words):
    """Plot the word count distribution."""
    plt.figure(figsize=(10, 6))
    plt.hist(word_counts, bins=range(min(word_counts), max(word_counts) + 1), edgecolor='black', alpha=0.7)
    plt.axvline(np.mean(word_counts), color='red', linestyle='dashed', linewidth=1, label=f'Mean = {np.mean(word_counts):.2f}')
    plt.axvline(np.median(word_counts), color='green', linestyle='dashed', linewidth=1, label=f'Median = {np.median(word_counts):.2f}')
    plt.xlabel('Word Count per Line')
    plt.ylabel('Frequency')
    plt.title('Distribution of Word Counts in Lines')
    plt.legend()
    plt.grid(True)
    plt.show()

def process_file(input_file, output_file):
    """Process the input file to remove emojis and adjust line lengths."""
    with open(input_file, 'r', encoding='utf-8') as file:
        lines = file.readlines()

    cleaned_lines = []
    for line in lines:
        # Remove emojis
        line_without_emojis = remove_emojis(line)
        cleaned_line = line_without_emojis.strip()
        if cleaned_line:  # Ensure the line is not empty
            cleaned_lines.append(cleaned_line)

    # Split lines using Gaussian distribution for word count
    final_lines, word_counts = split_lines_by_gaussian_word_count(cleaned_lines, min_words=6, max_words=12)

    with open(output_file, 'w', encoding='utf-8') as file:
        for line in final_lines:
            file.write(line + '\n')

    print(f'Emojis removed, lines adjusted with Gaussian word count, and saved to {output_file}')
    plot_word_count_distribution(word_counts, min_words=6, max_words=12)

if __name__ == "__main__":
    input_file = 'output.txt'  # The file generated by your previous process
    output_file = 'text-files/output/cleaned.txt'
    process_file(input_file, output_file)
